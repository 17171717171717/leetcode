//記小中大就好
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        if(!root)return true;
        return check(root,LONG_MIN,LONG_MAX);
    }
        
        
        /*if(root->left && root->right){
            if(root->left->val < root->val && root->right->val > root->val){
                return isValidBST(root->left) && isValidBST(root->right);
            }
            else return false;
        }
        
        else if (root->left && !root->right){
            if(root->left->val < root->val){
                return isValidBST(root->left);
            }
            else return false;
        }
        else if (root->right && !root->left){
            if(root->right->val > root->val){
                return isValidBST(root->right);
            }
            else return false;
        }
        
        return true;
        */
    
    
        bool check(TreeNode* root,long mi,long ma){
            if(!root)return true;
            if(root->val <= mi || root->val >= ma) return false;
            return check(root->left,mi,root->val) && check(root->right,root->val,ma);
        }
    
};
