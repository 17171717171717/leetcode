//head的左邊最大+右邊最大+1是答案
//node左邊或右邊最大是這個node左右的diameter，算一邊就好
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) {
        int ans = 0;
        dia(root,ans);
        return ans;
    }
    int dia(TreeNode* now,int &ans){
        if(!now)return 0;
        int l = dia(now->left,ans);
        int r = dia(now->right,ans);
        ans = max(l+r,ans);
        return max(l,r)+1;
        
        
    }
};
