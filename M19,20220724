//sol1,normal 
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(!head->next )return 0;
        
        ListNode* tmp =head,*pre=head;
        for(int i=0;i<n;i++){//nth node
            tmp = tmp->next;
        }
        if(!tmp)return head->next;//n>=list length : remove the first by n<=sz
        while(tmp->next){//eg. total 10,go 7 remain 3,so pre go 3=>n=7
            tmp = tmp->next;
            pre = pre->next;
        }
        pre-> next = pre->next->next;
        return head;
    }
};

// sol2,vector:
class Solution {
public:
	ListNode* removeNthFromEnd(ListNode* root, int n) {
		if(!root || !root->next) return NULL;

		vector<ListNode*> a;
		
		for(ListNode* b = root ; b ; b = b->next) a.push_back(b);
		if(a.size() == n){
			return  a[1];
		}
		
		a[a.size()-n-1]->next = a[a.size()-n]->next;
		return root;
	}
};
