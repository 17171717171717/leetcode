class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        //3*4 : 3rows,4cols
        int rows = matrix.size();
        int cols = matrix[0].size();
        int left = 0;
        int right = cols-1;
        int top = 0;
        int bottom = rows-1;
        //dir
        //int r=0;//right
       // int d=1;//down
        //int l=2;//left
        //int u=3;//up
        int dir = 0;
        vector<int>ans;
        //case by case
        while(left<=right && top<= bottom){
            switch(dir){
                case 0:
                    for(int i=left;i<=right;i++){
                        ans.push_back(matrix[top][i]);
                    }
                    dir = 1;
                    top++;
                    continue;
                case 1:
                    for(int i=top;i<=bottom;i++){
                        ans.push_back(matrix[i][right]);
                    }
                    dir = 2;
                    right--;
                    continue;
                case 2:
                    for(int i=right;i>=left;i--){
                        ans.push_back(matrix[bottom][i]);
                    }
                    dir = 3;
                    bottom--;
                    continue;
                case 3:
                    for(int i=bottom;i>=top;i--){
                        ans.push_back(matrix[i][left]);
                    }
                    dir = 0;
                    left++;
                    continue;
            }
        }
        return ans;
    }
};
