class Solution {
public:
    bool canJump(vector<int>& nums) {
        int n = nums.size();
        vector<bool>ans(n,false);
        ans[0] = true;
        for(int i=0;i<n;i++){
            if(ans[i] == true  ){
                for(int j = 1 ; j<=nums[i]&& i+j<n ; j++){
                    ans[i+j]=true;
                }
            }
        }
        return ans[n-1];
    }
};

class Solution {
public:
    bool canJump(vector<int>& nums) {
        int n = nums.size();
        int farest = 0;
        for(int i=0;i<n;i++){
            farest = max(farest, i+nums[i]);
            if(farest<i+1)break;
        }
        return farest >= n-1; 
    }
};
