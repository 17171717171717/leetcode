class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int sum = 0;
        for(int i=0;i<nums.size();i++){
            sum+=nums[i];
        }
        if (sum&1)return false;
        
        int target = sum / 2;
        //bool dp[target+1] ={false};
        vector<bool>dp(target+1,0);
        //dp[i]: i could be made by nums[]
        dp[0]=true;
        
        for(int i=0;i<nums.size();i++){
            for(int j=target;j>=nums[i];j--){
                //if nums[i] to target
                //nums[i] if = 1
                //dp[0~n] = true;
                dp[j] = dp[j] || dp[j-nums[i]];
                if(dp[target])return true;
            }
        }
        return false;
    }
};
