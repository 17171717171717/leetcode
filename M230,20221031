/*
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
       int ans;
       int i=0;
       ans = ldr(root,i,k);
       return ans;
    }
    
    
    int ldr(TreeNode *root, int &i,int k){//RETURN 0 : NOT FOUND
        int tmp=0;
        if(root->left && i!=k)
            tmp = ldr(root->left,i,k);
            if(tmp!=0)return tmp;
        
        i++;
        if(k==i) return root->val;
//只有在判斷是不是現在的時候的時候才i++
        if(root->right)
            tmp = ldr(root->right,i,k);
        return tmp;
    }
};*/

class Solution {
public:
    int ans;
    
    int kthSmallest(TreeNode* root, int k) {
        int i;
        ldr(root, k);
        return ans;
    }
    
    void ldr(TreeNode* root, int& k) {
        if(root->left)ldr(root->left, k);
        k--;
//k: 還有幾個人要看, =0:沒人要看 剩下自己
            ans = root->val;
            return;

        if (k == 0){
        } 
        if(root->right)ldr(root->right, k);
    }  
};
