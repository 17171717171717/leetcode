/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head)return NULL;
        ListNode* cur = head;
        int n = 0;
        while(cur && cur->next){
            n++;
            cur = cur->next;
        }
        n++;

        cur->next = head;
        
        k = k % n;
        k = n - k;
        for(int i = 1 ; i < k ; i++){
            head = head->next;
        }
        cur = head->next; 
        head->next = NULL;
        
        return cur;
        
    }
};
