
class Solution {
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {
        /*
            k = 0   1 2 3 4 5
          src = 0   0 0 0 0 0 
            b = max ...
            c = max    ...
            d = max      ...
            e = max   ...
        */

        vector<vector<int>>dp(k+2,vector<int>(n,67108864));

        for(int i = 0; i <= k+1 ; i++){
            dp[i][src] = 0;
        }

        for(int i = 1; i <= k+1 ; i++){
            for(auto& fly : flights){
                int a0 = fly[0], a1 = fly[1], a2 = fly[2];
                if(dp[i-1][a0]!=67108864) dp[i][a1] = min(dp[i-1][a0]+a2, dp[i][a1]);
            }
        }

        return dp[k+1][dst] == 67108864 ? -1 : dp[k+1][dst];

    }
};
