/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>recur(TreeNode* root,vector<int>ans,int level){
        if(!root)return ans;
        if(ans.size()==level-1){
            ans.push_back(root->val);//traverse right then left
            //so if ans.size(2)==level(3)-1
            //it means this level haven's has a answer
        }
        ans = recur(root->right,ans,level+1);
        ans = recur(root->left,ans,level+1);
        return ans;
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int>ans;
        if(!root)return ans;
        ans = recur(root,ans,1);
        return ans;
    }
};
